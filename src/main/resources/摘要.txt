=========================设计模式的概要=========================
1、找出应用中可能需要变化的地方，把它们独立出来，不要和哪些不需要变化的代码混合在一起
2、针对接口编程，而不是针对实现编程（变量的声明类型是一个超类，通常是一个抽象类或者是一个接口）
3、为了交互对象之间的松耦合设计而努力
4、多用组合，少用继承
5、利用继承设计子类的行为，实在编译的时候静态决定的，而且所有的子类都会继承到相同的行为，然而，如果能够利用组合的做法扩展对象的行为，就可以在运行是动态的进行扩展
6、类应该对扩展开放，对修改关闭（把注意力集中在设计中最有可能改变的地方，然后应用开闭原则）

=========================具体的设计模式定义=========================
1、策略模式
定义了算法簇，分别封装起来，让他们之间可以相互替换，此模式让算法的变化独立于使用算法的客户
2、观察者模式
定义了对象之间一对多的依赖，这样一来，当一个对象改变状态时，它的所有依赖者都会收到通知并且自动更新
观察者模式中，主题是具有状态的对象，并且可以控制这些状态，就是说有该模式中，有“一个”具有状态的主题，另一方面，观察者使用了这些状态，但是这些装态并不属于他们
3、装饰者模式
动态地就爱那个责任附加到对象上，若要扩展功能，装饰着提供了比继承更有弹性的替代方案
装饰者可以在所委托被装饰者的行为之前或者之后，加上自己的行为，以达到特定的目的